#include <stdio.h>
#include <stdbool.h>
int n, m; // Number of processes and number of resource types
int available[10], max[10][10], allocation[10][10], need[10][10];
void calculateNeed() {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            need[i][j] = max[i][j] - allocation[i][j];
        }
    }
}
bool isSafe() {
    int work[10], finish[10];
    for (int i = 0; i < m; i++) {
        work[i] = available[i];
    }
    for (int i = 0; i < n; i++) {
        finish[i] = 0;
    }
    while (true) {
        bool found = false;
        for (int i = 0; i < n; i++) {
            if (!finish[i]) {
                bool canProceed = true;
                for (int j = 0; j < m; j++) {
                    if (need[i][j] > work[j]) {
                        canProceed = false;
                        break;
                    }
                }
                if (canProceed) {
                    for (int j = 0; j < m; j++) {
                        work[j] += allocation[i][j];
                    }
                    finish[i] = 1;
                    found = true;
                }
            }
        }
        if (!found) {
            for (int i = 0; i < n; i++) {
                if (!finish[i]) {
                    return false;
                }
            }
            return true;
        }
    }
}
int main() {
    printf("Enter the number of processes: ");
    scanf("%d", &n);
    printf("Enter the number of resource types: ");
    scanf("%d", &m);
    printf("Enter the available resources: \n");
    for (int i = 0; i < m; i++) {
        scanf("%d", &available[i]);
    }
    printf("Enter the maximum demand of each process: \n");
    for (int i = 0; i < n; i++) {
        printf("For process %d: ", i);
        for (int j = 0; j < m; j++) {
            scanf("%d", &max[i][j]);
        }
    }
    printf("Enter the allocated resources of each process: \n");
    for (int i = 0; i < n; i++) {
        printf("For process %d: ", i);
        for (int j = 0; j < m; j++) {
            scanf("%d", &allocation[i][j]);
        }
    }
    calculateNeed();
    if (isSafe()) {
        printf("The system is in a safe state.\n");
    } else {
        printf("The system is not in a safe state.\n");
    }
    return 0;
}
